#dp

import sys
sys.stdin = open("Baekjoon/test.txt", "r")

n = int(input())

## dp 풀이법 , [0]크기의 배열을 n+1개 만큼 만들기
dp = [0] * (n+1)

dp[1] = 1

if n > 1 : 
    dp[2] = 2

# 1*2 타일을 마지막에 놓는 경우, 2*(n-1) 크기의 직사갹형을 채우는 방법의 수와 같다.
# 2*1 타일을 마지막에 놓는 경우, 2*(n-2) 크기의 직사각형을 채우는 방법의 수와 같다.

# dp[n] = dp[n-1] + dp[n-2]

for i in range(3, n+1) :
    dp[i] = (dp[i-1] + dp[i-2]) % 10007
    # 동적프로그래밍에서 연산 결과가 범위를 초과하면 오버플로우가 발생할 수 있음.
    # 값이 커지다가 음수가 되는 구간이 존재
    # int는 -2^31 부터 2^31-1까지의 값을 가질 수 있음.

# print(dp[n]% 10007)
print(dp[n])
# print(dp)